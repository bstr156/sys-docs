[
  {
    "key": "1",
    "data": {
      "name": " res",
      "type": " [  _Res_ ](types/#res)",
      "description": " The resulting object passed in which is assigned from syscointx.createTransaction() / syscointx.createAssetTransaction()",
      "required": " yes"
    },
    "children": [
      {
        "key": "1-0",
        "data": {
          "name": " txVersion",
          "type": " _Number_",
          "description": ""
        }
      },
      {
        "key": "1-1",
        "data": {
          "name": " inputs",
          "type": " [  _ResInput_ ](types/#resinput) _Array_",
          "description": ""
        },
        "children": [
          {
            "key": "1-1-0",
            "data": {
              "name": " type",
              "type": " _String_",
              "description": ""
            }
          },
          {
            "key": "1-1-1",
            "data": {
              "name": " address",
              "type": " _String_",
              "description": ""
            }
          },
          {
            "key": "1-1-2",
            "data": {
              "name": " txId",
              "type": " _String_",
              "description": ""
            }
          },
          {
            "key": "1-1-3",
            "data": {
              "name": " path",
              "type": " _String_",
              "description": ""
            }
          },
          {
            "key": "1-1-4",
            "data": {
              "name": " vout",
              "type": " _Number_",
              "description": ""
            }
          },
          {
            "key": "1-1-5",
            "data": {
              "name": " value",
              "type": " _BN_",
              "description": ""
            }
          },
          {
            "key": "1-1-6",
            "data": {
              "name": " locktime",
              "type": "",
              "description": ""
            }
          },
          {
            "key": "1-1-7",
            "data": {
              "type": " assetInfo",
              "description": " [  _AssetInfo_ ](types/#assetinfo)"
            },
            "children": [
              {
                "key": "1-1-7-0",
                "data": {
                  "name": " assetGuid",
                  "type": " _String_",
                  "description": " Unique, numeric identifier of the token generated on creation"
                }
              },
              {
                "key": "1-1-7-1",
                "data": {
                  "name": " value",
                  "type": " _BN_  /  _String_",
                  "description": " Value transferred. Type will be  _BN_  if within a  [  _Res_ ](types/#res)  object,  _String_  if within a  [  _UTXO_ ](types/#utxo)  object"
                }
              }
            ]
          }
        ]
      },
      {
        "key": "1-2",
        "data": {
          "type": " outputs",
          "description": " [  _Output_ ](types/#output) _Array_"
        }
      }
    ]
  },
  {
    "key": "2",
    "data": {
      "name": " Signer",
      "type": " [  _Signer_ ](types/#Signer)",
      "description": "",
      "required": " yes"
    },
    "children": [
      {
        "key": "2-0",
        "data": {
          "name": " mnemonic",
          "type": " _String_",
          "description": " 12 word, Bip32 seed phrase",
          "required": " yes"
        }
      },
      {
        "key": "2-1",
        "data": {
          "name": " password",
          "type": " _String_",
          "description": " Encryption password for local storage on web clients",
          "required": " no"
        }
      },
      {
        "key": "2-2",
        "data": {
          "name": " isTestnet",
          "type": " _Boolean_",
          "description": " If using testnet set this to true",
          "required": " no"
        }
      },
      {
        "key": "2-3",
        "data": {
          "name": " networks",
          "type": " [  _Networks_ ](types/#networks)",
          "description": " Defaults to Syscoin network. Bitcoinjs-lib network settings for coin being used",
          "required": " no"
        },
        "children": [
          {
            "key": "2-3-0",
            "data": {
              "name": " mainnet",
              "type": " [  _Network_ ](types/#network)",
              "description": " [  network ](#network)  object to be used for mainnet"
            },
            "children": [
              {
                "key": "2-3-1-0",
                "data": {
                  "name": " messagePrefix",
                  "type": " _String_",
                  "description": ""
                }
              },
              {
                "key": "2-3-1-1",
                "data": {
                  "name": " bech32",
                  "type": " _String_",
                  "description": ""
                }
              },
              {
                "key": "2-3-1-2",
                "data": {
                  "name": " bip32",
                  "type": " [  _BIP32_ ](types/#bip32)",
                  "description": ""
                }
              },
              {
                "key": "2-3-1-3",
                "data": {
                  "name": " pubKeyHash",
                  "type": " ` Hex`",
                  "description": ""
                }
              },
              {
                "key": "2-3-1-4",
                "data": {
                  "name": " scriptHash",
                  "type": " ` Hex`",
                  "description": ""
                }
              },
              {
                "key": "2-3-1-5",
                "data": {
                  "type": " wif",
                  "description": " ` Hex`"
                }
              }
            ]
          },
          {
            "key": "2-3-1",
            "data": {
              "name": " testnet",
              "type": " [  _Network_ ](types/#network)",
              "description": " [  network ](#network)  object to be used for testnet"
            },
            "children": [
              {
                "key": "2-3-1-0",
                "data": {
                  "name": " messagePrefix",
                  "type": " _String_",
                  "description": ""
                }
              },
              {
                "key": "2-3-1-1",
                "data": {
                  "name": " bech32",
                  "type": " _String_",
                  "description": ""
                }
              },
              {
                "key": "2-3-1-2",
                "data": {
                  "name": " bip32",
                  "type": " [  _BIP32_ ](types/#bip32)",
                  "description": ""
                }
              },
              {
                "key": "2-3-1-3",
                "data": {
                  "name": " pubKeyHash",
                  "type": " ` Hex`",
                  "description": ""
                }
              },
              {
                "key": "2-3-1-4",
                "data": {
                  "name": " scriptHash",
                  "type": " ` Hex`",
                  "description": ""
                }
              },
              {
                "key": "2-3-1-5",
                "data": {
                  "type": " wif",
                  "description": " ` Hex`"
                }
              }
            ]
          }
        ]
      },
      {
        "key": "2-4",
        "data": {
          "name": " SLIP44",
          "type": " _Number_",
          "description": " SLIP44 value for the coin, see:  [  SLIP44 Values ](https://github.com/satoshilabs/slips/blob/master/slip-0044.md)",
          "required": " no"
        }
      },
      {
        "key": "2-5",
        "data": {
          "name": " pubTypes",
          "type": " _String_",
          "description": " Defaults to Syscoin ZPub/VPub types. Specific ZPub for BIP84 and VPub for testnet",
          "required": " no"
        }
      }
    ]
  },
  {
    "key": "3",
    "data": {
      "name": " notaryAssets",
      "type": " [  _NotaryDetails_ ](types/#notarydetails)",
      "description": " Asset objects that are required for notarization, fetch signatures via  [  fetchNotarizationFromEndPoint() ](utils/#fetchnotarizationfromendpoint)",
      "required": " no"
    },
    "children": [
      {
        "key": "3-0",
        "data": {
          "name": " endpoint",
          "type": " _String_",
          "description": " Fully qualified URL of the notary endpoint. The endpoint will be sent a POST request with the transaction hex and some other details in a JSON object and requires a signature signing the transaction following notarization protocol"
        }
      },
      {
        "key": "3-1",
        "data": {
          "name": " instanttransfers",
          "type": " _Boolean_",
          "description": " Default is 0 (false). Instant transfers by blocking double-spends from inputs. Since notarization is happening via API the API can block any double-spend attempts thereby allowing for instant transactions"
        }
      },
      {
        "key": "3-2",
        "data": {
          "name": " hdrequired",
          "type": " _Boolean_",
          "description": " Default is 0 (false). If HD account  [  _xPub_ ](types/#xpub)  and  [  HD path ](https://learnmeabitcoin.com/technical/derivation-paths)  information is required by the notary to verify change addresses belong to the sender account"
        }
      }
    ]
  }
]