[
  {
    "key": "0",
    "data": {
      "name": " precision",
      "type": " _Number_",
      "description": " Digits precision for this asset. Range is 0 to 8"
    }
  },
  {
    "key": "1",
    "data": {
      "name": " symbol",
      "type": " _String_",
      "description": " Symbol up to 8 characters in length in ASCII"
    }
  },
  {
    "key": "2",
    "data": {
      "name": " maxsupply",
      "type": " _BN_",
      "description": " Maximum satoshis for supply. Range is 1 to 1 quintillion (10^18)"
    }
  },
  {
    "key": "3",
    "data": {
      "name": " description",
      "type": " _String_",
      "description": " Description in ASCII describing token. The description will be encoded via JSON in the pubdata field for the asset and will be in the &#39;desc&#39; field of the JSON object"
    }
  },
  {
    "key": "4",
    "data": {
      "name": " contract",
      "type": " _String_",
      "description": " ERC20 address of the contract connected to this SPT for use in the SysEthereum bridge"
    }
  },
  {
    "key": "5",
    "data": {
      "name": " updatecapabilityflags",
      "type": " _Number_",
      "description": " Defaults to 127 or ALL capabilities. Update capabilities on this asset. Read more  [  _here_ ](types/#updatecapabilityflags)"
    }
  },
  {
    "key": "6",
    "data": {
      "name": " notarykeyid",
      "type": " _String_",
      "description": " Notary KeyID, the hash160 of the address used for notarization. Should be P2WPKH"
    }
  },
  {
    "key": "7",
    "data": {
      "name": " notarydetails",
      "type": " [  _NotaryDetails_ ](types/#notarydetails)",
      "description": " Details related to the notarization of transactions using this asset"
    },
    "children": [
      {
        "key": "7-0",
        "data": {
          "name": " endpoint",
          "type": " _String_",
          "description": " Fully qualified URL of the notary endpoint. The endpoint will be sent a POST request with the transaction hex and some other details in a JSON object and requires a signature signing the transaction following notarization protocol"
        }
      },
      {
        "key": "7-1",
        "data": {
          "name": " instanttransfers",
          "type": " _Boolean_",
          "description": " Default is 0 (false). Instant transfers by blocking double-spends from inputs. Since notarization is happening via API the API can block any double-spend attempts thereby allowing for instant transactions"
        }
      },
      {
        "key": "7-2",
        "data": {
          "name": " hdrequired",
          "type": " _Boolean_",
          "description": " Default is 0 (false). If HD account  [  _xPub_ ](types/#xpub)  and  [  HD path ](https://learnmeabitcoin.com/technical/derivation-paths)  information is required by the notary to verify change addresses belong to the sender account"
        }
      }
    ]
  },
  {
    "key": "8",
    "data": {
      "name": " auxFeeDetails",
      "type": " [  _AuxFeeDetails_ ](types/#auxfeedetails)",
      "description": " Enforce auxiliary fees to every transaction on this asset"
    },
    "children": [
      {
        "key": "8-0",
        "data": {
          "name": " auxfeekeyid",
          "type": " _String_",
          "description": " AuxFee KeyID, the hash160 of the address used where fees are paid out to. Should be P2WPKH"
        }
      },
      {
        "key": "8-1",
        "data": {
          "name": " auxfees",
          "type": " [  _AuxFee_ ](types/#auxfee) _Array_",
          "description": " Details of the auxiliary fees that must be paid for each transaction"
        },
        "children": [
          {
            "key": "8-1-0",
            "data": {
              "name": " bound",
              "type": " _BN_",
              "description": " Lower bound from which the given auxiliary fee percentage begins"
            }
          },
          {
            "key": "8-1-1",
            "data": {
              "name": " percent",
              "type": " _Number_",
              "description": " Percentage fee that must be paid when a transaction&#39;s value is above the given bound (percentages are cumulative)"
            }
          }
        ]
      }
    ]
  }
]